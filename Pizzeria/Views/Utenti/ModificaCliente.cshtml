@model Pizzeria.Models.Utenti

@{
    ViewBag.Title = "ModificaCliente";
}



@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="container">

        <section class="p-4">
            <div class="bg-white border rounded-5">

                <section class="w-100">
                    <style>
                        .bg-image-vertical {
                            position: relative;
                            overflow: hidden;
                            background-repeat: no-repeat;
                            background-position: right center;
                            background-size: auto 100%;
                        }
                    </style>
                    <div class="row">

                        <div class="col text-black">
                            <div class="d-flex flex-column align-items-center h-custom-2 px-5 ms-xl-4 mt-5 pt-5 pt-xl-0 mt-xl-n5">

                                <div style="width: 23rem;">

                                    <h3 class="fw-normal mb-3 pb-3" style="letter-spacing: 1px;">Modifica Profilo</h3>

                                    @Html.HiddenFor(m=>m.IdUtenti)
                                    <div class=" col form-outline mb-4">
                                        @Html.LabelFor(m=>m.Nome ,new { @class="form-label"})
                                        @Html.EditorFor(model => model.Nome, new { htmlAttributes = new { @class = "form-control form-control-lg" } })
                                        @Html.ValidationMessageFor(model => model.Nome, "", new { @class = "text-danger" })
                                        <div class="form-notch"><div class="form-notch-leading" style="width: 9px;"></div><div class="form-notch-middle" style="width: 88.8px;"></div><div class="form-notch-trailing"></div></div>
                                    </div>
                                    <div class=" col form-outline mb-4">
                                        @Html.LabelFor(m=>m.Cognome ,new{@class="form-label"})
                                        @Html.EditorFor(model => model.Cognome, new { htmlAttributes = new { @class = "form-control form-control-lg", placeholder = "Cognome" } })
                                        @Html.ValidationMessageFor(model => model.Cognome, "", new { @class = "text-danger" })
                                        <div class="form-notch"><div class="form-notch-leading" style="width: 9px;"></div><div class="form-notch-middle" style="width: 88.8px;"></div><div class="form-notch-trailing"></div></div>
                                    </div>
                                    <div class="form-outline mb-4">
                                        @Html.LabelFor(m=>m.Indirizzo ,new{@class="form-label"})
                                        @Html.EditorFor(model => model.Indirizzo, new { htmlAttributes = new { @class = "form-control form-control-lg", placeholder = "Indirizzo" } })
                                        @Html.ValidationMessageFor(model => model.Indirizzo, "", new { @class = "text-danger" })
                                        <div class="form-notch"><div class="form-notch-leading" style="width: 9px;"></div><div class="form-notch-middle" style="width: 88.8px;"></div><div class="form-notch-trailing"></div></div>
                                    </div>
                                    <div class="form-outline mb-4">
                                        @Html.LabelFor(m=>m.Citta ,new{@class="form-label"})
                                        @Html.EditorFor(model => model.Citta, new { htmlAttributes = new { @class = "form-control form-control-lg", placeholder = "Città" } })
                                        @Html.ValidationMessageFor(model => model.Citta, "", new { @class = "text-danger" })
                                        <div class="form-notch"><div class="form-notch-leading" style="width: 9px;"></div><div class="form-notch-middle" style="width: 88.8px;"></div><div class="form-notch-trailing"></div></div>
                                    </div>


                                    <div class="form-outline mb-4">
                                        @Html.LabelFor(m=>m.Username ,new{@class="form-label"})
                                        @Html.EditorFor(model => model.Username, new { htmlAttributes = new { @class = "form-control form-control-lg", placeholder = "Username" } })
                                        @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })
                                        <div class="form-notch"><div class="form-notch-leading" style="width: 9px;"></div><div class="form-notch-middle" style="width: 88.8px;"></div><div class="form-notch-trailing"></div></div>
                                    </div>

                                    <div class="form-outline mb-4">
                                        @Html.LabelFor(m => m.Password, new { @class = "form-label" })
                                        @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control form-control-lg", placeholder = "Password", type = "password" } })
                                        @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                                        <div class="form-notch"><div class="form-notch-leading" style="width: 9px;"></div><div class="form-notch-middle" style="width: 64.8px;"></div><div class="form-notch-trailing"></div></div>
                                    </div>
                                    @Html.HiddenFor(model => model.Ruolo, new { htmlAttributes = new { @class = "form-control" } })


                                    <div class="pt-1 mb-4">
                                        <button class="btn btn-outline-danger btn-lg btn-block" type="submit">Modifica</button>
                                    </div>


                                </div>

                            </div>

                        </div>
                      
                    </div>
                </section>


            </div>
        </section>
    </div>
}



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
